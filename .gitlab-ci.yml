variables:
  GIT_STRATEGY: clone # default strategy is fetch, we want to clone whole repo from scratch every build
  GIT_SUBMODULE_STRATEGY: normal # default strategy does not update submodules every build
  SHV_NIRVANA_IP: "165.227.247.202"
  SHV_HEAVEN_IP: "138.68.112.73"

stages:
  - build
  - test
  - deploy

linux:
  tags:
    - linux
  rules:
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_BRANCH == "production"
      when: never
  interruptible: true
  stage:
    build
  script:
    - rm -rf build
    - mkdir -p build
    - cd build
    - CFLAGS="-Werror" CXXFLAGS="-DGIT_COMMIT=${CI_BUILD_REF} -Werror" cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=/opt/qt/5.15.2/gcc_64 -DCMAKE_INSTALL_PREFIX=. -DUSE_QT6=OFF -DLIBSHV_USE_QT6=OFF -DWITH_LDAP=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
    - make -j$(nproc)

linux-6:
  tags:
    - linux
  stage:
    build
  interruptible: true
  artifacts:
    paths:
    - build/_dist
  script:
    - rm -rf build
    - mkdir -p build
    - cd build
    - CFLAGS="-Werror" CXXFLAGS="-DGIT_COMMIT=${CI_BUILD_REF} -Werror" cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_PREFIX_PATH=/opt/qt/6.5.3/gcc_64 -DCMAKE_INSTALL_PREFIX=. -DUSE_QT6=ON -DWITH_LDAP=ON -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER_LAUNCHER=ccache ..
    - make -j$(nproc)
    - ctest --output-on-failure -j$(nproc)
    - make install
    - ../make-linux-artifacts-qt6.sh

production-deploy:
  only:
    - production
  tags:
    - linux
  stage:
    deploy
  script:
    - id
    - cd build
    # nirvana
    - rsync -avz _dist/lib _dist/bin shv@${SHV_NIRVANA_IP}:/opt/shv-prod/
    - ssh -t gitlab@${SHV_NIRVANA_IP} "sudo /opt/shv-prod/install.sh"

  environment:
    name: jessie

production-deploy-heaven:
  only:
    - production
  tags:
    - linux
  stage:
    deploy
  script:
    - id
    - cd build
    - rsync -avz _dist/lib _dist/bin shv@${SHV_HEAVEN_IP}:/opt/shv/production/
    - ssh -t shv@${SHV_HEAVEN_IP} "sudo /opt/shv/production/install.sh"
  environment:
    name: heaven

test-deploy:
  only:
    - test
  tags:
    - linux
  stage:
    deploy
  script:
    # nirvana
    - pwd
    - cd build
    # - rsync -avz _dist/lib _dist/bin /opt/shv/
    - rsync -avz _dist/lib _dist/bin gitlab@${SHV_NIRVANA_IP}:/opt/shv-test/
    - rsync -avz ../clients/hscope/etc/shv/lua-lib/* gitlab@${SHV_NIRVANA_IP}:/etc/shv/hscope/lua-lib
    - ssh -t gitlab@${SHV_NIRVANA_IP} "sudo /opt/shv-test/install.sh"
    # heaven
    - rsync -avz _dist/lib _dist/bin shv@${SHV_HEAVEN_IP}:/opt/shv/test/
    - ssh -t shv@${SHV_HEAVEN_IP} "sudo /opt/shv/test/install.sh"
    # hscope
    - rsync -avz ../clients/hscope/dashboard/* shv@${SHV_HEAVEN_IP}:/var/www/html/hscope/
    - rsync -avz ../3rdparty/libshv-js/*.js shv@${SHV_HEAVEN_IP}:/var/www/html/hscope/libshvchainpack/
    - ssh -t shv@${SHV_HEAVEN_IP} "/opt/shv/test/deploy-hscope.sh"

  environment:
    name: jessie

win-build:
  tags:
    - windows
  stage:
    build
  interruptible: true
  script:
    - bash build-win.sh
  artifacts:
    paths:
      - _inno/
